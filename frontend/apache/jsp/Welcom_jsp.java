/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.41
 * Generated at: 2025-06-03 13:19:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class Welcom_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("h1{\r\n");
      out.write("text-align: center;\r\n");
      out.write(" background-color: red;\r\n");
      out.write(" color: white;\r\n");
      out.write(" \r\n");
      out.write("}\r\n");
      out.write("#f{\r\n");
      out.write("border-radius: 10px;\r\n");
      out.write("width: 90%;\r\n");
      out.write("height: auto;\r\n");
      out.write("margin: 100px auto;\r\n");
      out.write("box-sizing: border-box;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body >\r\n");
      out.write("<form action=\"\">\r\n");
      out.write("<fieldset id=\"f\" style=\"background-color: #e0f7fa; font-family: Arial, sans-serif;\">\r\n");
      out.write("<h1>ðŸŽ® Welcome to the Guessing Number Game!</h1>\r\n");
      out.write("<marquee  direction=\"left\" style=\" color:  #4CAF50; font-size: large; font-style:oblique; \">ðŸŽ® Designed & Developed by Kolichelim Srinath â€“ Guessing Number Challenge ðŸ”¢</marquee>\r\n");
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("<h3 style=\"text-align: center ;\">About Game</h3>\r\n");
      out.write("\r\n");
      out.write("<p style=\"font-size: 18px; color: #333; line-height: 1.6; text-align: center; max-width: 700px; margin: auto;\">\r\n");
      out.write("    Welcome to the <strong>Number Guessing Game</strong>! ðŸŽ®<br><br>\r\n");
      out.write("    In this game, the system randomly selects a number between <strong>1 and 100</strong>.<br>\r\n");
      out.write("    Your task is to guess the number correctly within <strong>10 chances</strong>.<br><br>\r\n");
      out.write("    After each guess, you'll receive a hint: whether your guess is <em>too high</em> or <em>too low</em>.<br>\r\n");
      out.write("    Based on how quickly you guess the number, a score will be displayed at the end.<br><br>\r\n");
      out.write("    Sharpen your mind, trust your instincts, and let the game begin! ðŸ§ ðŸ’¥\r\n");
      out.write("</p>\r\n");
      out.write("</form>\r\n");
      out.write("<div style=\" justify-content: center; display: flex; gap:40px;margin-top: 20px;\">\r\n");
      out.write("<form action=\"Login.jsp\">\r\n");
      out.write("<input type=\"submit\" value=\"LogIn\" style=\" padding: 10px 20px; font-size: 16px;  background-color: blue\">\r\n");
      out.write("</form>\r\n");
      out.write("<form action=\"signUp.jsp\">\r\n");
      out.write("<input type=\"submit\" value=\"SingUp\" style=\" padding: 10px 20px; font-size: 16px; background-color: red\">\r\n");
      out.write("</form>\r\n");
      out.write("</div>\r\n");
      out.write("</fieldset>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
