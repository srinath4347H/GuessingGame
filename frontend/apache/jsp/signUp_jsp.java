/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.41
 * Generated at: 2025-06-03 12:49:13 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class signUp_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("	\r\n");
      out.write("	<!DOCTYPE html>\r\n");
      out.write("	<html>\r\n");
      out.write("	<head>\r\n");
      out.write("	<meta charset=\"UTF-8\">\r\n");
      out.write("	<title>Insert title here</title>\r\n");
      out.write("	<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("	<style type=\"text/css\">\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	.lab\r\n");
      out.write("	{\r\n");
      out.write("	font-size: 25px;\r\n");
      out.write("	font-family: serif;\r\n");
      out.write("	display: block;\r\n");
      out.write("	text-align: left;\r\n");
      out.write("	margin-top: 10px;\r\n");
      out.write("	}\r\n");
      out.write("	form {\r\n");
      out.write("        max-width: 600px;\r\n");
      out.write("        margin: 40px auto;\r\n");
      out.write("        padding: 20px;\r\n");
      out.write("        background-color: white;\r\n");
      out.write("        border-radius: 10px;\r\n");
      out.write("        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("        text-align: center;\r\n");
      out.write("    }\r\n");
      out.write("    .in\r\n");
      out.write("    {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    border-style: solid;\r\n");
      out.write("    font-size: 16px;\r\n");
      out.write("    \r\n");
      out.write("    }\r\n");
      out.write("    body\r\n");
      out.write("    {\r\n");
      out.write("      background-color: #e0f7fa;\r\n");
      out.write("    }\r\n");
      out.write("    #s\r\n");
      out.write("    {\r\n");
      out.write("    width: 100%;\r\n");
      out.write("    padding: 10px;\r\n");
      out.write("    margin-top: 16px;\r\n");
      out.write("    text-align: center;\r\n");
      out.write("    font-size: 20px;\r\n");
      out.write("    border-radius: 10px;\r\n");
      out.write("    background-color: green;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("    }\r\n");
      out.write("	\r\n");
      out.write("	</style>\r\n");
      out.write("	</head>\r\n");
      out.write("	<body>	 \r\n");
      out.write("	<form action=\"registration\" method=\"post\">\r\n");
      out.write("	<h1>Welcome to the SignUp Page!</h1>\r\n");
      out.write("	<p style=\" font-size: large;\">Please fill in the form below to create your account.</p>\r\n");
      out.write("	<label for=\"name\" class=\"lab\">User Name</label>\r\n");
      out.write("	<input type=\"text\" id=\"name\"class=\"in\" name=\"username\"required>\r\n");
      out.write("	<br>\r\n");
      out.write("	<br>\r\n");
      out.write("	<label for=\"email\" class=\"lab\">Email</label>\r\n");
      out.write("	<input type=\"email\" id=\"email\"class=\"in\" name=\"email\"required>\r\n");
      out.write("	<br>\r\n");
      out.write("	<br>\r\n");
      out.write("	<label for=\"pass\" class=\"lab\">Password</label>\r\n");
      out.write("	<input type=\"password\" id=\"pass\" class=\"in\" name=\"password\" required >\r\n");
      out.write("	<input type=\"submit\" value=\"Signup\" id=\"s\">\r\n");
      out.write("	</form>\r\n");
      out.write("\r\n");
      out.write("	</body>\r\n");
      out.write("	</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
